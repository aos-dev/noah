{
  "BetweenStorageCheck": {
    "description": "Do check for between storage task",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ]
    },
    "output": [
      "DestinationObject",
      "SourceObject"
    ]
  },
  "CopyDir": {
    "description": "copy a directory recursively between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "CheckTasks",
        "HandleObjCallbackFunc",
        "PartSize",
        "PartThreshold",
        "StorageClass"
      ]
    }
  },
  "CopyFile": {
    "description": "copy a file between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "CheckTasks",
        "DryRunFunc",
        "HandleObjCallbackFunc",
        "PartSize",
        "PartThreshold",
        "StorageClass"
      ]
    }
  },
  "CopyLargeFile": {
    "description": "copy a large file between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage",
        "TotalSize"
      ],
      "optional": [
        "CheckMD5",
        "PartSize",
        "StorageClass"
      ]
    },
    "output": [
      "Offset",
      "Segment"
    ]
  },
  "CopyPartialFile": {
    "description": "copy a partial file to between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "Index",
        "Offset",
        "PartSize",
        "Segment",
        "SourcePath",
        "SourceStorage",
        "TotalSize"
      ],
      "optional": [
        "CheckMD5",
        "StorageClass"
      ]
    },
    "output": [
      "Done",
      "Size"
    ]
  },
  "CopyPartialStream": {
    "description": "copy a partial stream between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "Index",
        "PartSize",
        "Segment",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "StorageClass"
      ]
    },
    "output": [
      "Content",
      "Done",
      "Offset",
      "Size"
    ]
  },
  "CopySingleFile": {
    "description": "execute a file copy operation between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "Size",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "MD5Sum",
        "StorageClass"
      ]
    }
  },
  "CopySmallFile": {
    "description": "copy a small file between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "Size",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "MD5Sum",
        "StorageClass"
      ]
    }
  },
  "CopyStream": {
    "description": "copy a stream between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "PartSize",
        "StorageClass"
      ]
    },
    "output": [
      "BytesPool",
      "Segment"
    ]
  },
  "CreateStorage": {
    "description": "create a storage",
    "input": {
      "required": [
        "Service"
      ],
      "optional": [
        "Zone"
      ]
    },
    "output": [
      "StorageName"
    ]
  },
  "DeleteDir": {
    "description": "will delete a dir recursively",
    "input": {
      "required": [
        "Path",
        "Storage"
      ],
      "optional": [
        "HandleObjCallbackFunc"
      ]
    }
  },
  "DeleteFile": {
    "description": "will delete a file from storage",
    "input": {
      "required": [
        "Path",
        "Storage"
      ],
      "optional": [
        "HandleObjCallbackFunc"
      ]
    }
  },
  "DeletePrefix": {
    "description": "will delete objects with given prefix from storage",
    "input": {
      "required": [
        "Path",
        "Storage"
      ],
      "optional": [
        "HandleObjCallbackFunc"
      ]
    }
  },
  "DeleteSegment": {
    "description": "delete segments with a given path",
    "input": {
      "required": [
        "PrefixSegmentsLister",
        "Segment"
      ],
      "optional": [
        "HandleSegmentCallbackFunc"
      ]
    }
  },
  "DeleteSegmentsByPrefix": {
    "description": "delete all segments with a given path",
    "input": {
      "required": [
        "Prefix",
        "PrefixSegmentsLister"
      ],
      "optional": [
        "HandleSegmentCallbackFunc"
      ]
    }
  },
  "DeleteStorage": {
    "description": "delete a storage",
    "input": {
      "required": [
        "Service",
        "StorageName"
      ],
      "optional": [
        "Force",
        "HandleObjCallbackFunc",
        "HandleSegmentCallbackFunc",
        "Zone"
      ]
    }
  },
  "Fetch": {
    "description": "fetch object",
    "input": {
      "required": [
        "Fetcher",
        "Path",
        "URL"
      ]
    }
  },
  "IsDestinationObjectExist": {
    "description": "check if destination object exist",
    "input": {
      "required": [
        "DestinationObject"
      ]
    },
    "output": [
      "Result"
    ]
  },
  "IsDestinationObjectNotExist": {
    "description": "check if destination object not exist",
    "input": {
      "required": [
        "DestinationObject"
      ]
    },
    "output": [
      "Result"
    ]
  },
  "IsSizeEqual": {
    "description": "check if source object and destination object size equal",
    "input": {
      "required": [
        "DestinationObject",
        "SourceObject"
      ]
    },
    "output": [
      "Result"
    ]
  },
  "IsSourcePathExcludeInclude": {
    "description": "check if source path is excluded or included",
    "input": {
      "required": [
        "SourcePath"
      ],
      "optional": [
        "ExcludeRegexp",
        "IncludeRegexp"
      ]
    },
    "output": [
      "Result"
    ]
  },
  "IsUpdateAtGreater": {
    "description": "check if source object's mtime is greater (newer) than destination object's",
    "input": {
      "required": [
        "DestinationObject",
        "SourceObject"
      ]
    },
    "output": [
      "Result"
    ]
  },
  "ListDir": {
    "description": "list dirs",
    "input": {
      "required": [
        "DirLister",
        "Path"
      ]
    },
    "output": [
      "ObjectIter"
    ]
  },
  "ListPrefix": {
    "description": "list prefix",
    "input": {
      "required": [
        "Path",
        "PrefixLister"
      ]
    },
    "output": [
      "ObjectIter"
    ]
  },
  "ListSegment": {
    "description": "list segments",
    "input": {
      "required": [
        "Path",
        "PrefixSegmentsLister"
      ]
    },
    "output": [
      "SegmentIter"
    ]
  },
  "ListStorage": {
    "description": "send get request to get bucket list",
    "input": {
      "required": [
        "Service"
      ],
      "optional": [
        "Zone"
      ]
    },
    "output": [
      "StorageIter"
    ]
  },
  "MD5SumFile": {
    "description": "get file's md5 sum",
    "input": {
      "required": [
        "Offset",
        "Path",
        "Size",
        "Storage"
      ]
    },
    "output": [
      "MD5Sum"
    ]
  },
  "MD5SumStream": {
    "description": "get stream's md5 sum",
    "input": {
      "required": [
        "Content"
      ]
    },
    "output": [
      "MD5Sum"
    ]
  },
  "MoveDir": {
    "description": "move a directory recursively between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "CheckTasks",
        "HandleObjCallbackFunc",
        "PartSize",
        "PartThreshold"
      ]
    }
  },
  "MoveFile": {
    "description": "move a file between two storager",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "CheckTasks",
        "HandleObjCallbackFunc",
        "PartSize",
        "PartThreshold"
      ]
    }
  },
  "ReachFile": {
    "description": "will reach a remote object and return the signed url",
    "input": {
      "required": [
        "Expire",
        "Path",
        "Reacher"
      ]
    },
    "output": [
      "URL"
    ]
  },
  "ReadFile": {
    "description": "read file from storage",
    "input": {
      "required": [
        "Path",
        "Storage",
        "WriteCloser"
      ],
      "optional": [
        "Offset",
        "ReadCallBackFunc",
        "Size"
      ]
    }
  },
  "SegmentComplete": {
    "description": "complete a segment",
    "input": {
      "required": [
        "IndexSegmenter",
        "Path",
        "Segment"
      ]
    }
  },
  "SegmentFileCopy": {
    "description": "copy a segment file",
    "input": {
      "required": [
        "DestinationIndexSegmenter",
        "DestinationPath",
        "Index",
        "Offset",
        "Segment",
        "Size",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "MD5Sum"
      ]
    }
  },
  "SegmentInit": {
    "description": "init a segment upload",
    "input": {
      "required": [
        "IndexSegmenter",
        "PartSize",
        "Path"
      ]
    },
    "output": [
      "Segment"
    ]
  },
  "SegmentStreamCopy": {
    "description": "copy a segment stream",
    "input": {
      "required": [
        "Content",
        "DestinationIndexSegmenter",
        "DestinationPath",
        "Index",
        "Offset",
        "Segment",
        "Size"
      ],
      "optional": [
        "MD5Sum"
      ]
    }
  },
  "SegmentStreamInit": {
    "description": "init a partial stream between two storager",
    "input": {
      "required": [
        "BytesPool",
        "PartSize",
        "SourcePath",
        "SourceStorage"
      ]
    },
    "output": [
      "Content",
      "Done",
      "Size"
    ]
  },
  "StatFile": {
    "description": "stat a remote object by request headObject",
    "input": {
      "required": [
        "Path",
        "Storage"
      ]
    },
    "output": [
      "Object"
    ]
  },
  "StatStorage": {
    "description": "stat a remote storage by Statistical",
    "input": {
      "required": [
        "Storage"
      ]
    },
    "output": [
      "StorageInfo"
    ]
  },
  "Sync": {
    "description": "sync directory between two storage",
    "input": {
      "required": [
        "DestinationPath",
        "DestinationStorage",
        "SourcePath",
        "SourceStorage"
      ],
      "optional": [
        "CheckMD5",
        "CheckTasks",
        "DryRunFunc",
        "HandleObjCallbackFunc",
        "PartSize",
        "PartThreshold",
        "Recursive"
      ]
    }
  },
  "WriteFile": {
    "description": "write file to storage",
    "input": {
      "required": [
        "Path",
        "ReadCloser",
        "Storage"
      ],
      "optional": [
        "Offset",
        "ReadCallBackFunc",
        "Size",
        "StorageClass"
      ]
    }
  },
  "WriteSegment": {
    "description": "write segment to storage",
    "input": {
      "required": [
        "Index",
        "IndexSegmenter",
        "ReadCloser",
        "Segment",
        "Size"
      ],
      "optional": [
        "Path",
        "ReadCallBackFunc"
      ]
    }
  }
}